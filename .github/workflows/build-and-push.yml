name: Build & Push App

on:
    pull_request:
        branches:
            - master
        types:
            - closed

permissions:
    id-token: write
    contents: read

jobs:
    Build-and-Push:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: docker/setup-buildx-action@v3
            - name: Set empty .env file
              shell: bash
              run: touch .env
            - name: Set React .env file
              shell: bash
              run: |
                  touch ./frontend/myapp/.env
                  echo "REACT_APP_API_DOMAIN=${{ secrets.REACT_APP_API_DOMAIN }}" >> frontend/myapp/.env
                  echo "REACT_APP_IMAGE_URL=${{ secrets.REACT_APP_IMAGE_URL }}" >> frontend/myapp/.env
                  echo "REACT_APP_GOOGLE_MAP_API_KEY=${{ secrets.REACT_APP_GOOGLE_MAP_API_KEY }}" >> frontend/myapp/.env
            - name: Cache Docker layers
              uses: actions/cache@v3
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-
            - name: Build cache
              shell: bash
              run: |
                  docker buildx bake -f docker-compose.yml --set *.cache-from=type=local,src=/tmp/.buildx-cache --set *.cache-to=type=local,dest=/tmp/.buildx-cache-new
                  rm -rf /tmp/.buildx-cache
                  mv /tmp/.buildx-cache-new /tmp/.buildx-cache
            - name: Setup Docker Container
              shell: bash
              run: |
                  docker buildx bake -f docker-compose.yml --load --set *.cache-from=type=local,src=/tmp/.build-cache
                  docker compose run rails yarn install --check-files
                  docker compose run rails yarn upgrade
                  docker compose run react yarn install
            - name: Build React App
              shell: bash
              run: |
                  docker compose run react yarn build
            - name: Build Docker Container
              shell: bash
              run: docker compose build
            - name: Configure AWS Credencials
              uses: aws-actions/configure-aws-credentials@v3
              with:
                  role-to-assume: ${{ secrets.ROLE_GITHUB_ACTIONS_OIDC_ARN }}
                  aws-region: ap-northeast-1
            - name: Login to ECR
              uses: docker/login-action@v3
              with:
                  registry: ${{ secrets.ECR_REGISTRY }}
            - name: Push Rails Image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: ./containers/rails/Dockerfile
                  push: true
                  tags: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_RAILS }}:latest
                  provenance: false
            - name: Push Nginx-api Image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: ./containers/nginx-api/Dockerfile
                  push: true
                  tags: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_NGINX_API }}:latest
                  provenance: false
            - name: Push Nginx-front Image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: ./containers/nginx-front/Dockerfile
                  push: true
                  tags: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_NGINX_FRONT }}:latest
                  provenance: false
