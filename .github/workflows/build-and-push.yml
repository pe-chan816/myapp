name: Build & Push App

on:
  pull_request:
    branches:
      - master
    types:
      - closed

permissions:
  id-token: write
  contents: read

jobs:
  Build-and-Push:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
      -
        uses: docker/setup-buildx-action@v1
      -
        name: Set .env file
        shell: bash
        run: |
          touch .env
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      -
        name: Build cache
        shell: bash
        run: |
          docker buildx bake -f docker-compose.yml --set *.cache-from=type=local,src=/tmp/.buildx-cache --set *.cache-to=type=local,dest=/tmp/.buildx-cache-new
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      -
        name: Setup Docker Container
        shell: bash
        run: |
          docker buildx bake -f docker-compose.yml --load --set *.cache-from=type=local,src=/tmp/.build-cache
          docker compose run rails yarn install --check-files
          docker compose run rails yarn upgrade
          docker compose run react yarn install
          docker compose up -d
      -
        name: Build React App
        shell: bash
        run: |
          docker compose exec react yarn build
      -
        name: Configure AWS Credencials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsOIDC
          aws-region: ${{ secrets.AWS_REGION }}
      -
        name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ECR_REGISTRY }}
      -
        name: Push Rails Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./containers/rails/Dockerfile
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_RAILS }}:latest
      -
        name: Push Nginx-api Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./containers/nginx-api/Dockerfile
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_NGINX_API }}:latest
      -
        name: Push Nginx-front Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./containers/nginx-front/Dockerfile
          push: true
          tags: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPO_NGINX_FRONT }}:latest
